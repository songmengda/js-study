{
  "extends": "./tsconfig.base.json", // 继承其他tsconfig文件  并且可以覆盖
  "compileOnSave": true, // 文件保存时自动编译 (vscode暂时不支持这个选项)
  "compilerOptions": {
    // "incremental": true,   // 增量编译，ts编译器可以在第一次编译后生成一个存储编译信息的文件  第二次编译时根据这个文件去编译 提高编译的速度
    // "tsBuildInfoFile": "./buildInfoFile", // 增量编译文件的存储位置
    // "diagnostics": true, // 打印诊断信息
    // "target": "es5", // 目标语言的版本'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'
    // "module": "commonjs", // 生成代码的模块标准  'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'
    // "outFile": "./min.js", // 将多个相互依赖的文件  生成一个文件   可以在AMD中使用
    // "lib": [ // ts需要引入的类库   es5默认是 "dom","es5","scripthost"
    //   "dom",
    //   "es5",
    //   "scripthost",
    //   "es2019.array"
    // ],
    // "allowJs": true, // 允许编译JS文件（js jsx）
    // "checkJs": true, // 允许在js中报错   与allowJs一起使用
    // "outDir": "./out", // 指定输出目录
    // "rootDir": "./", // 指定输入文件目录 （用于输出）
    // "declaration": true, // 生成声明文件
    // "declarationDir": "./d", // 声明文件路径
    // "emitDeclarationOnly": true, // 只生成声明文件
    // "sourceMap": true, // 生成目标文件的sourceMap
    // "inlineSourceMap": true, // 生成目标文件的  inline  sourceMap
    // "declarationMap": true, // 生成声明文件的sourceMap
    // "typeRoots": [], // 声明文件目录  默认 node_modules/types
    // "types":[], // 声明文件包
    "removeComments": true, // 删除注释
    "noEmit": true, // 不输出文件
    "noEmitOnError": true, // 发生错误时不输出文件
    "noEmitHelpers": true, // 不生成helper函数 需要额外安装ts-helpers
    "importHelpers": true, // 通过tslib引入helper函数 文件是必须模块
    "downlevelIteration": true, // 降级遍历器的实现
    //---->
    "strict": true, // 开启所有严格类型的检查 , 如果这个选项是true   下边几个默认也是true
    // "noImplicitAny": true, 不允许隐式的any类型
    // "alwaysStrict": true, 在代码中注入 "use strict"
    // "strictNullChecks": true, 不允许把null undefined 赋值给其他变量
    // "strictFunctionTypes": true,  不允许函数参数双向协变
    // "strictPropertyInitialization": true,类的实例属性必须初始化
    // "strictBindCallApply": true,   严格的bind  call  apply检查
    // "noImplicitThis": true,  不允许this有隐式的any类型
    // <----
    //---->
    // "noUnusedLocals": true, 检查只声明 未使用的局部变量
    // "noUnusedParameters": true,  检查未使用的函数参数
    // "noFallthroughCasesInSwitch": true,防止switch语句贯穿
    // "noImplicitReturns": true,  每个分支都要有返回值
    // "esModuleInterop": true,  允许export= 导出  由import from 导入
    // "allowUmdGlobalAccess": true,  允许在模块中访问umd变量
    // "moduleResolution": "node", 模块解析策略
    // "baseUrl": "./", 解析非相对模块的基地址
    // "paths": {},     路径映射  相对于baseUrl
    // "rootDirs": [], 将多个目录放在一个虚拟目录下  用于运行时
    // "listEmittediles":true // 打印输出的文件
    // "listFiles": true // 打印编译的文件  （包括引用的声明文件）
  }
}